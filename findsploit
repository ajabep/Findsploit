#!/bin/bash
# Finsploit is a simple bash script to quickly and easily search both local and online exploit databases.

VER='1.8'
SEARCHSPLOIT_SCRIPT='/usr/bin/searchsploit'
NMAP_SCRIPTS='/usr/share/nmap/scripts'
MSF_MODULE_DIR='/opt/metasploit-framework/embedded/framework/modules'
BROWSER_CMD='xdg-open'
REPO_FULLNAME='ajabep/Findsploit'
VAR1=$1;
VAR2=$2;
VAR3=$3;
VARS="$*"
COLOR1='\033[91m'
COLOR2='\033[1m\033[92m'
COLOR3='\033[1m'
RESET='\033[0m'

function logo {
	echo -e "$COLOR3   ___ _           _           _       _ _   "
	echo -e "$COLOR3  / __(_)_ __   __| |___ _ __ | | ___ (_) |_ "
	echo -e "$COLOR3 / _\ | | '_ \ / _\` / __| '_ \| |/ _ \| | __|"
	echo -e "$COLOR3/ /   | | | | | (_| \__ \ |_) | | (_) | | |_ "
	echo -e "$COLOR3\/    |_|_| |_|\__,_|___/ .__/|_|\___/|_|\__|"
	echo -e "$COLOR3                        |_|                  "
	echo ""
	echo -e "$COLOR1+ -- --=[findsploit v$VER by 1N3"
	echo -e "$COLOR1+ -- --=[https://crowdshield.com$RESET"
	echo ""
}

function exit_fail() {
	echo -e "$COLOR1+ -- --=[Error: $1 $RESET"
	echo ""
	exit 1
}

function update {
	logo

	echo -e "$COLOR1+ -- --=[Checking for updates... $RESET"
	if [[ $(curl -s https://api.github.com/repos/$REPO_FULLNAME/tags) == "" ]];
	then
		exit_fail "Error: no active internet connection"
	fi

	LATEST_VERSION=$(curl -s https://api.github.com/repos/$REPO_FULLNAME/tags | grep -Po '"name":.*?[^\\]",'| head -1 | cut -c11-13)
	if [[ "$LATEST_VERSION" != "$VER" && "$LATEST_VERSION" != "" ]];
	then
		echo -e "$COLOR1+ -- --=[Findsploit v$LATEST_VERSION is available to download. $RESET"
		echo -e "$COLOR1+ -- --=[Do you want to update Findsploit [y/N]: $RESET"
		read answer
		if [[ "$answer" == "Y" || "$answer" == "y" ]] ;
		then
			cd  /tmp || exit_fail "Update Failed"
			rm -r Findsploit  2> /dev/null
			git clone https://github.com/$REPO_FULLNAME || exit_fail "Couldn't download latest version"
			cd Findsploit ||  exit_fail "Git clone fails"
			git checkout $LATEST_VERSION 2> /dev/null
			./install.sh
			cd ..
			rm -r Findsploit
		else
			exit 1
		fi
	else
		echo -e "$COLOR1+ -- --=[Findsploit is already the latest version $RESET"
		echo ""
	fi
}

if [ -z "$1" ];
then
	logo
	echo -e "$COLOR1+ -- --=[Usages: findsploit windows xp remote, etc."
	echo -e "$COLOR1+ -- --=[     or findsploit --update|-u$RESET"
	echo ""
	echo ""
	exit;
fi

if [[ "$1" == "--update" || "$1" == "-u" ]];
then
	update
	exit
elif [[ "$1" == "auxiliary" || "$1" == "encoders" || "$1" == "exploits" || "$1" == "payloads" ]];
then
	logo
	cd $MSF_MODULE_DIR/$1
	find -type f | sed "s/^\./$1/;s/\.rb$//" # TODO Display all informations
	exit
else
	logo
	echo -e "$COLOR1+ -- --=[SEARCHING: $COLOR2 $VARS $RESET"
	echo ""
	echo -e "$COLOR1+ -- --=[NMAP SCRIPTS$RESET"
	echo ""
	find $NMAP_SCRIPTS -type f | grep -Ei --color=always "$VAR1" | grep -Ei "$VAR2" --color=always | grep -Ei "$VAR3" --color=always
	echo ""
	echo ""
	echo -e "$COLOR1+ -- --=[METASPLOIT EXPLOITS$RESET"
	echo ""
	cd $MSF_MODULE_DIR
	find -type f  \
		| sed "s/^\.\///;s/\.rb$//" \
		| grep -Ei "$VAR1" --color=always \
		| grep -Ei "$VAR2" --color=always \
		| grep -Ei "$VAR3" --color=always \
		# TODO Display all informations
	echo ""
	echo ""
	echo -e "$COLOR1+ -- --=[EXPLOITDB EXPLOITS$RESET"
	echo ""
	$SEARCHSPLOIT_SCRIPT $VARS
	echo ""
	echo ""
	echo -e "$COLOR2+ -- --=[Press any key to search online or Ctrl+C to exit...$RESET"
	read -n 1 test
	$BROWSER_CMD 'https://www.google.ca/search?q='$VAR1'%20'$VAR2'%20'$VAR3'+exploit' 2>/dev/null &> /dev/null
	sleep 5
	$BROWSER_CMD 'https://www.google.ca/search?q='$VAR1'%20'$VAR2'%20'$VAR3'+exploit+site:www.securityfocus.com' 2> /dev/null &> /dev/null
	$BROWSER_CMD 'https://www.google.ca/search?q='$VAR1'%20'$VAR2'%20'$VAR3'+site:0day.today' 2> /dev/null &> /dev/null
	$BROWSER_CMD 'https://www.google.ca/search?q='$VAR1'%20'$VAR2'%20'$VAR3'+site:www.security-database.com' 2> /dev/null
	$BROWSER_CMD 'https://www.google.ca/search?q='$VAR1'%20'$VAR2'%20'$VAR3'+site:packetstormsecurity.com' 2> /dev/null &> /dev/null
	$BROWSER_CMD 'https://exploits.shodan.io/?q='$VAR1'+'$VAR2'+'$VAR3 2> /dev/null &> /dev/null
	$BROWSER_CMD 'https://vulners.com/search?query='$VAR1'+'$VAR2'+'$VAR3 2> /dev/null &> /dev/null
fi
